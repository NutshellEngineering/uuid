<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Docs on uuid</title><link>https://nutshellengineering.github.io/uuid/docs/</link><description>Recent content in Docs on uuid</description><generator>Hugo</generator><language>en</language><atom:link href="https://nutshellengineering.github.io/uuid/docs/index.xml" rel="self" type="application/rss+xml"/><item><title>API Documentation</title><link>https://nutshellengineering.github.io/uuid/docs/api-documentation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nutshellengineering.github.io/uuid/docs/api-documentation/</guid><description>API Documentation # UUIDs # Static utility methods for creating, parsing, inspecting, and comparing UUID instances in accordance with RFC 9562.
The UUIDs class provides factory methods for generating all standard UUID versions defined in RFC 9562, including:
v1UUID() — Version 1 (time-based UUIDs) v3UUID(NS, String) — Version 3 (name-based using MD5) v3UUID(String) — JDK Compatible Version 3 v4UUID() — Version 4 (random UUIDs) v5UUID(NS, String) — Version 5 (name-based using SHA-1) v5UUID(String) — Version 5 with similarity to name-only Version 3 v6UUID() — Version 6 (sortable, time-reordered) v7UUID() — Version 7 (Unix time-based with randomness) v8UUID() — Version 8 (custom format) It also defines constants and utilities for working with the special values defined in the RFC:</description></item><item><title>Custom Namespaces</title><link>https://nutshellengineering.github.io/uuid/docs/creating-custom-namespaces/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nutshellengineering.github.io/uuid/docs/creating-custom-namespaces/</guid><description>Creating Custom Namespaces # The UUIDs.Namespace interface allows applications to define both standard and custom namespace identifiers.
Well-known namespaces (such as DNS, URL, OID, and X.500) are defined by RFC 9562 and are provided as predefined constants in this library. Applications that need additional or application-specific namespaces can implement this interface to supply a custom UUID value.
When creating a custom namespace UUID, you should generally use a randomly or time-ordered generated UUID, such as a UUIDv4 (random) or UUIDv7 (time-ordered with random bits).</description></item></channel></rss>